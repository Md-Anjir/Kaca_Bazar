{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SellerHeader from \"../component/SellerHeader\";\nimport Footer from \"../component/Footer\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SellerProductAd() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [selectedProductID, setSelectedProductID] = useState(\"\");\n  const [unitName, setUnitName] = useState(\"KG\");\n  const [unitPrice, setUnitPrice] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [stock, setStock] = useState(\"\");\n  const [pictureURL, setPictureURL] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messageType, setMessageType] = useState(\"success\");\n\n  // Fetch product list on component mount\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3000/product\");\n        setProducts(response.data);\n      } catch (error) {\n        console.error(\"Error fetching products:\", error);\n      }\n    };\n    fetchProducts();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const sellertoken = localStorage.getItem(\"sellertoken\");\n    if (!sellertoken) {\n      setMessage(\"Please log in to add a product.\");\n      setMessageType(\"error\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:3000/seller/product_ad\", {\n        Product_ID: selectedProductID,\n        Unit_Name: unitName,\n        Stock: stock,\n        Unit_Price: unitPrice,\n        Description: description,\n        Picture_URL: pictureURL\n      }, {\n        headers: {\n          Authorization: `Bearer ${sellertoken}`\n        }\n      });\n      if (response.status === 201) {\n        // Check for created response status\n        setMessage(\"Product Ads Added Successfully!\");\n        setMessageType(\"success\");\n        // Clear form fields\n        setSelectedProductID(\"\");\n        setUnitName(\"KG\");\n        setStock(\"\"); // Corrected this line\n        setUnitPrice(\"\");\n        setDescription(\"\");\n        setPictureURL(\"\");\n      } else {\n        setMessage(\"Failed to add product ad.\");\n        setMessageType(\"error\");\n      }\n    } catch (error) {\n      console.error(\"Error adding product ad:\", error);\n      setMessage(\"An error occurred while adding the product ad. Please try again.\");\n      setMessageType(\"error\");\n    }\n  };\n\n  // Clear message after 10 seconds\n  useEffect(() => {\n    if (message) {\n      const timer = setTimeout(() => setMessage(\"\"), 10000); // Adjusted to 10 seconds\n      return () => clearTimeout(timer); // Cleanup\n    }\n  }, [message]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(SellerProductAd, \"GgLVbnhfX5XCxlKKx2V2uPJrtF0=\");\n_c = SellerProductAd;\nexport default SellerProductAd;\nvar _c;\n$RefreshReg$(_c, \"SellerProductAd\");","map":{"version":3,"names":["React","useState","useEffect","axios","SellerHeader","Footer","Fragment","_Fragment","jsxDEV","_jsxDEV","SellerProductAd","_s","products","setProducts","selectedProductID","setSelectedProductID","unitName","setUnitName","unitPrice","setUnitPrice","description","setDescription","stock","setStock","pictureURL","setPictureURL","message","setMessage","messageType","setMessageType","fetchProducts","response","get","data","error","console","handleSubmit","e","preventDefault","sellertoken","localStorage","getItem","post","Product_ID","Unit_Name","Stock","Unit_Price","Description","Picture_URL","headers","Authorization","status","timer","setTimeout","clearTimeout","_c","$RefreshReg$"],"sources":["F:/Kaca Bazar/frontend/src/pages/SellerProductAd.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport SellerHeader from \"../component/SellerHeader\";\r\nimport Footer from \"../component/Footer\";\r\n\r\nfunction SellerProductAd() {\r\n  const [products, setProducts] = useState([]);\r\n  const [selectedProductID, setSelectedProductID] = useState(\"\");\r\n  const [unitName, setUnitName] = useState(\"KG\");\r\n  const [unitPrice, setUnitPrice] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [stock, setStock] = useState(\"\");\r\n\r\n  const [pictureURL, setPictureURL] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messageType, setMessageType] = useState(\"success\");\r\n\r\n  // Fetch product list on component mount\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:3000/product\");\r\n        setProducts(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching products:\", error);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const sellertoken = localStorage.getItem(\"sellertoken\");\r\n\r\n    if (!sellertoken) {\r\n      setMessage(\"Please log in to add a product.\");\r\n      setMessageType(\"error\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:3000/seller/product_ad\",\r\n        {\r\n          Product_ID: selectedProductID,\r\n          Unit_Name: unitName,\r\n          Stock: stock,\r\n          Unit_Price: unitPrice,\r\n          Description: description,\r\n          Picture_URL: pictureURL,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${sellertoken}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.status === 201) {\r\n        // Check for created response status\r\n        setMessage(\"Product Ads Added Successfully!\");\r\n        setMessageType(\"success\");\r\n        // Clear form fields\r\n        setSelectedProductID(\"\");\r\n        setUnitName(\"KG\");\r\n        setStock(\"\"); // Corrected this line\r\n        setUnitPrice(\"\");\r\n        setDescription(\"\");\r\n        setPictureURL(\"\");\r\n      } else {\r\n        setMessage(\"Failed to add product ad.\");\r\n        setMessageType(\"error\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding product ad:\", error);\r\n      setMessage(\r\n        \"An error occurred while adding the product ad. Please try again.\"\r\n      );\r\n      setMessageType(\"error\");\r\n    }\r\n  };\r\n\r\n  // Clear message after 10 seconds\r\n  useEffect(() => {\r\n    if (message) {\r\n      const timer = setTimeout(() => setMessage(\"\"), 10000); // Adjusted to 10 seconds\r\n      return () => clearTimeout(timer); // Cleanup\r\n    }\r\n  }, [message]);\r\n\r\n  return (\r\n    <>\r\n    </>\r\n    \r\n  );\r\n}\r\n\r\nexport default SellerProductAd;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}